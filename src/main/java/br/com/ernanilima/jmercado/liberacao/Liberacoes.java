package br.com.ernanilima.jmercado.liberacao;

import lombok.Getter;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@Getter
public enum Liberacoes {
    // As liberacoes poderiam ter tambem o 'ROLE' que eh usado como padrao para aplicacoes wen
    // ex: ADMIN(9999, 9999, "ROLE_ADMIN", "Permisao de administrador")

    // Administrador, permisssao nao eh exibida
    ADMIN(9999, 9999, ""),

    CADASTROS(1000, 9999, "CADASTROS"),

    CADASTROS_PRODUTOS(1001, 1000, "CADASTROS RELACIONADOS A PRODUTOS"),

    CADASTROS_PRODUTOS_DEPARTAM(1002, 1001, "VISUALIZAR CADASTROS DE DEPARTAMENTOS"),
    CADASTROS_PRODUTOS_DEPARTAM_CADASTRAR(1003, 1002, "CADASTRAR NOVO DEPARTAMENTO"),
    CADASTROS_PRODUTOS_DEPARTAM_EDITAR(1004, 1002, "EDITAR DEPARTAMENTO"),
    CADASTROS_PRODUTOS_DEPARTAM_EXCLUIR(1005, 1002, "EXCLUIR DEPARTAMENTO"),

    CADASTROS_PRODUTOS_GRUPO(1011, 1001, "VISUALIZAR CADASTROS DE GRUPOS"),
    CADASTROS_PRODUTOS_GRUPO_CADASTRAR(1012, 1011, "CADASTRAR NOVO GRUPO"),
    CADASTROS_PRODUTOS_GRUPO_EDITAR(1013, 1011, "EDITAR GRUPO"),
    CADASTROS_PRODUTOS_GRUPO_EXCLUIR(1014, 1011, "EXCLUIR GRUPO"),

    CADASTROS_PRODUTOS_SUBGRUPO(1021, 1001, "VISUALIZAR CADASTROS DE SUBGRUPOS"),
    CADASTROS_PRODUTOS_SUBGRUPO_CADASTRAR(1022, 1021, "CADASTRAR NOVO SUBGRUPO"),
    CADASTROS_PRODUTOS_SUBGRUPO_EDITAR(1023, 1021, "EDITAR SUBGRUPO"),
    CADASTROS_PRODUTOS_SUBGRUPO_EXCLUIR(1024, 1021, "EXCLUIR SUBGRUPO"),

    CADASTROS_PRODUTOS_PRODUTOS(1071, 1001, "VISUALIZAR CADASTROS DE PRODUTOS"),
    CADASTROS_PRODUTOS_PRODUTOS_CADASTRAR(1072, 1071, "CADASTRAR NOVO PRODUTO"),
    CADASTROS_PRODUTOS_PRODUTOS_EDITAR(1073, 1071, "EDITAR PRODUTO"),
    CADASTROS_PRODUTOS_PRODUTOS_EXCLUIR(1074, 1071, "EXCLUIR PRODUTO"),


    CADASTROS_USUARIOS(1201, 1000, "CADASTROS RELACIONADOS A USUARIOS"),

    CADASTROS_USUARIOS_GRUPOS_USUARIOS(1202,1201, "VISUALIZAR CADASTROS DE GRUPOS DE USUÁRIOS"),
    CADASTROS_USUARIOS_GRUPOS_USUARIOS_CADASTRAR(1203,1202, "CADASTRAR NOVO GRUPO DE USUÁRIO"),
    CADASTROS_USUARIOS_GRUPOS_USUARIOS_EDITAR(1204,1202, "EDITAR GRUPO DE USUÁRIO"),
    CADASTROS_USUARIOS_GRUPOS_USUARIOS_EXCLUIR(1205,1202, "EXCLUIR GRUPO DE USUÁRIO"),
    CADASTROS_USUARIOS_GRUPOS_USUARIOS_IGUALAR(1206,1202, "IGUALAR GRUPO DE USUÁRIO"),

    CADASTROS_USUARIOS_USUARIOS(1251,1201, "VISUALIZAR CADASTROS DE USUÁRIOS"),
    CADASTROS_USUARIOS_USUARIOS_CADASTRAR(1252,1251, "CADASTRAR NOVO USUÁRIO"),
    CADASTROS_USUARIOS_USUARIOS_EDITAR(1253,1251, "EDITAR USUÁRIO"),
    CADASTROS_USUARIOS_USUARIOS_EXCLUIR(1254,1251, "EXCLUIR USUÁRIO"),
    CADASTROS_USUARIOS_USUARIOS_IGUALAR(1255,1251, "IGUALAR USUÁRIO"),
    CADASTROS_USUARIOS_USUARIOS_REMOVERSENHA(1256,1251, "REMOVER SENHA DE USUÁRIO"),
    //CADASTROS_USUARIOS_USUARIOS_REMOVERSENHAOUTRO(1256,1251, "REMOVER SENHA DE OUTRO USUÁRIO"),
    //CADASTROS_USUARIOS_USUARIOS_REMOVERSENHAPROPRIO(1257,1251, "REMOVER SENHA DO PRÓPRIO USUÁRIO"),
    CADASTROS_USUARIOS_USUARIOS_BLOQUSUARIO(1258,1251, "BLOQUEAR USUÁRIO");

    private int codigo;
    private int codigoPai;
    private String descricao;

    private static final List<Liberacoes> COLUNAS;

    Liberacoes(int codigo, int codigoPai, String descricao) {
        this.codigo = codigo;
        this.codigoPai = codigoPai;
        this.descricao = descricao;
    }

    static {
        COLUNAS = new ArrayList<>();
        COLUNAS.addAll(Arrays.asList(Liberacoes.values()));
    }

    public static List<Liberacoes> obterLiberacoes() {
        return Collections.unmodifiableList(COLUNAS);
    }

    public static Liberacoes toEnum(Integer codigo) {
        if (codigo == null) { return null; }
        for (Liberacoes x : Liberacoes.values()) {
            if (codigo.equals(x.codigo))
                return x;
        } throw new IllegalArgumentException("Invalido");
    }

    @Override
    public String toString() {
        return descricao;
    }
}
